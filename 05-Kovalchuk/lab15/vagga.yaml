containers:
  nginx:
    setup:
      - !Alpine v3.7
      - !Install
        - nginx
        - openssl
        - apache2-utils
      - !EnsureDir /usr/home/http
      - !EnsureDir /usr/web
    volumes:
      /usr/home/http: !BindRO /work/usr/home/http
      /usr/web: !BindRO /work/usr/web
      /tmp: !Tmpfs { size: 100Mi, mode: 0o1777 }

commands:
  gen-cert: !Command
    description: generate certificates for nginx
    container: nginx
    run: |
        set -x
        mkdir -p cert

        # Generate key for CA
        openssl genrsa -passout env:CERT_PASSWORD -des3 -out cert/anxolerdCA.key 4096

        # Generate root certificate
        openssl req -x509 -new -nodes \
            -key cert/anxolerdCA.key -passin env:CERT_PASSWORD \
            -sha256 \
            -days 365 \
            -subj "$ROOT_CERT_SUBJECT" \
            -out cert/anxolerdCA.pem

        # Generate private key for site certificate
        openssl genrsa -out cert/beta.zone05.net.key 4096
        openssl genrsa -out cert/srv-05.zone05.net.key 4096

        # Create a CSR (certificate signing request)
        openssl req -new \
            -key cert/beta.zone05.net.key \
            -subj "$CSR_BETA_SUBJECT" \
            -out cert/beta.zone05.net.csr

        # Create a CSR (certificate signing request)
        openssl req -new \
            -key cert/srv-05.zone05.net.key \
            -subj "$CSR_SRV_05_SUBJECT" \
            -out cert/srv-05.zone05.net.csr

        # Create a CSR config
        cat >cert/beta.zone05.net.csr.conf << 'EOF'
        [req]
        default_bits = 4096
        prompt = no
        default_md = sha512
        distinguished_name = dn

        [dn]
        C=UA
        ST=Kyiv
        L=Kyiv city
        O=anxolerd
        CN=beta.zone05.net.
        emailAddredd=anxolerd@outlook.com
        EOF

        # CSR config extension
        cat >cert/beta.zone05.net.csr.ext << 'EOF'
        authorityKeyIdentifier = keyid, issuer
        basicConstraints = CA:FALSE
        keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment
        subjectAltName = @alt_names

        [alt_names]
        DNS.1 = beta.zone05.net.
        EOF

        cat >cert/srv-05.zone05.net.csr.conf << 'EOF'
        [req]
        default_bits = 4096
        prompt = no
        default_md = sha512
        distinguished_name = dn

        [dn]
        C=UA
        ST=Kyiv
        L=Kyiv city
        O=anxolerd
        CN=srv-05.zone05.net.
        emailAddredd=anxolerd@outlook.com
        EOF

        # CSR config extension
        cat >cert/srv-05.zone05.net.csr.ext << 'EOF'
        authorityKeyIdentifier = keyid, issuer
        basicConstraints = CA:FALSE
        keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment
        subjectAltName = @alt_names

        [alt_names]
        DNS.1 = srv-05.zone05.net.
        EOF
 
        # Sign certificate
        openssl x509 -req -in cert/beta.zone05.net.csr \
            -CA cert/anxolerdCA.pem \
            -CAkey cert/anxolerdCA.key -passin env:CERT_PASSWORD \
            -CAcreateserial \
            -out cert/beta.zone05.net.crt \
            -days 30 \
            -sha512 \
            -extfile cert/beta.zone05.net.csr.ext

        # Sign certificate
        openssl x509 -req -in cert/srv-05.zone05.net.csr \
            -CA cert/anxolerdCA.pem \
            -CAkey cert/anxolerdCA.key -passin env:CERT_PASSWORD \
            -CAcreateserial \
            -out cert/srv-05.zone05.net.crt \
            -days 30 \
            -sha512 \
            -extfile cert/srv-05.zone05.net.csr.ext
    environ:
        CERT_PASSWORD: my_awesome_certificate_password
        ROOT_CERT_SUBJECT: /C=UA/ST=Kyiv/L=Kyiv city/O=anxolerd/CN=zone05.net.
        CSR_BETA_SUBJECT: /C=UA/ST=Kyiv/L=Kyiv city/O=anxolerd/CN=beta.zone05.net.
        CSR_SRV_05_SUBJECT: /C=UA/ST=Kyiv/L=Kyiv city/O=anxolerd/CN=srv-05.zone05.net.

  run: !Command
    description: run nginx
    container: nginx
    run: |
      nginx -c /work/config/nginx.conf

  htpasswd: !Command
    description: run htpasswd
    container: nginx
    run: [htpasswd]
